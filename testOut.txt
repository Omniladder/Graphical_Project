==13685== Memcheck, a memory error detector
==13685== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13685== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==13685== Command: ./main
==13685== 
BEFORE ERROR ???
IS THE ERROR HERE
==13685== Invalid write of size 4
==13685==    at 0x10CAB4: Shape::add_Point(float, float) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E746: main (in /home/omniladder/Work_Space/main)
==13685==  Address 0x1583ea20 is 0 bytes after a block of size 144 alloc'd
==13685==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==13685==    by 0x10F811: __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10F5A9: std::allocator_traits<std::allocator<float> >::allocate(std::allocator<float>&, unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10F291: std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10EE4B: std::vector<float, std::allocator<float> >::reserve(unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10C335: Shape::addCap(int) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10C291: Shape::Shape(int) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E725: main (in /home/omniladder/Work_Space/main)
==13685== 
==13685== Invalid write of size 4
==13685==    at 0x10CAED: Shape::add_Point(float, float) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E746: main (in /home/omniladder/Work_Space/main)
==13685==  Address 0x1583ea24 is 4 bytes after a block of size 144 alloc'd
==13685==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==13685==    by 0x10F811: __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10F5A9: std::allocator_traits<std::allocator<float> >::allocate(std::allocator<float>&, unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10F291: std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10EE4B: std::vector<float, std::allocator<float> >::reserve(unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10C335: Shape::addCap(int) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10C291: Shape::Shape(int) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E725: main (in /home/omniladder/Work_Space/main)
==13685== 
==13685== Invalid write of size 4
==13685==    at 0x10CB1B: Shape::add_Point(float, float) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E746: main (in /home/omniladder/Work_Space/main)
==13685==  Address 0x1583ea28 is 8 bytes after a block of size 144 alloc'd
==13685==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==13685==    by 0x10F811: __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10F5A9: std::allocator_traits<std::allocator<float> >::allocate(std::allocator<float>&, unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10F291: std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10EE4B: std::vector<float, std::allocator<float> >::reserve(unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10C335: Shape::addCap(int) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10C291: Shape::Shape(int) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E725: main (in /home/omniladder/Work_Space/main)
==13685== 
==13685== Invalid write of size 4
==13685==    at 0x10CB4D: Shape::add_Point(float, float) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E746: main (in /home/omniladder/Work_Space/main)
==13685==  Address 0x1583ea2c is 12 bytes after a block of size 144 alloc'd
==13685==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==13685==    by 0x10F811: __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10F5A9: std::allocator_traits<std::allocator<float> >::allocate(std::allocator<float>&, unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10F291: std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10EE4B: std::vector<float, std::allocator<float> >::reserve(unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10C335: Shape::addCap(int) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10C291: Shape::Shape(int) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E725: main (in /home/omniladder/Work_Space/main)
==13685== 
==13685== Invalid write of size 4
==13685==    at 0x10CB7F: Shape::add_Point(float, float) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E746: main (in /home/omniladder/Work_Space/main)
==13685==  Address 0x1583ea30 is 16 bytes after a block of size 144 alloc'd
==13685==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==13685==    by 0x10F811: __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10F5A9: std::allocator_traits<std::allocator<float> >::allocate(std::allocator<float>&, unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10F291: std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10EE4B: std::vector<float, std::allocator<float> >::reserve(unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10C335: Shape::addCap(int) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10C291: Shape::Shape(int) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E725: main (in /home/omniladder/Work_Space/main)
==13685== 
==13685== Invalid write of size 4
==13685==    at 0x10CBB1: Shape::add_Point(float, float) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E746: main (in /home/omniladder/Work_Space/main)
==13685==  Address 0x1583ea34 is 20 bytes after a block of size 144 alloc'd
==13685==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==13685==    by 0x10F811: __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10F5A9: std::allocator_traits<std::allocator<float> >::allocate(std::allocator<float>&, unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10F291: std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10EE4B: std::vector<float, std::allocator<float> >::reserve(unsigned long) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10C335: Shape::addCap(int) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10C291: Shape::Shape(int) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E725: main (in /home/omniladder/Work_Space/main)
==13685== 
==13685== Invalid write of size 4
==13685==    at 0x10CBE3: Shape::add_Point(float, float) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E746: main (in /home/omniladder/Work_Space/main)
==13685==  Address 0x1583ea38 is 24 bytes after a block of size 144 in arena "client"
==13685== 

valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 208, hi = 1132396544.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==13685==    at 0x5804284A: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==13685==    by 0x58042977: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==13685==    by 0x58042B1B: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==13685==    by 0x5804C8CF: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==13685==    by 0x5803AE9A: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==13685==    by 0x580395B7: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==13685==    by 0x5803DF3D: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==13685==    by 0x58038868: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==13685==    by 0x100B0A706C: ???
==13685==    by 0x1002CADF2F: ???
==13685==    by 0x581FCD83: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==13685==    by 0x1002CADF17: ???
==13685==    by 0x1002CADF2F: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 13685)
==13685==    at 0x10CC15: Shape::add_Point(float, float) (in /home/omniladder/Work_Space/main)
==13685==    by 0x10E746: main (in /home/omniladder/Work_Space/main)
client stack range: [0x1FFEFF6000 0x1FFF000FFF] client SP: 0x1FFEFFFE80
valgrind stack range: [0x1002BAE000 0x1002CADFFF] top usage: 18984 of 1048576

Thread 2: status = VgTs_WaitSys syscall 202 (lwpid 13687)
==13685==    at 0x4D4C197: __futex_abstimed_wait_common64 (futex-internal.c:57)
==13685==    by 0x4D4C197: __futex_abstimed_wait_common (futex-internal.c:87)
==13685==    by 0x4D4C197: __futex_abstimed_wait_cancelable64 (futex-internal.c:139)
==13685==    by 0x4D4EAC0: __pthread_cond_wait_common (pthread_cond_wait.c:503)
==13685==    by 0x4D4EAC0: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:627)
==13685==    by 0x674489C: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x66F4B0A: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x67447CA: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x4D4FB42: start_thread (pthread_create.c:442)
==13685==    by 0x4DE0BB3: clone (clone.S:100)
client stack range: [0x116B1000 0x11EAFFFF] client SP: 0x11EAFC10
valgrind stack range: [0x10075DC000 0x10076DBFFF] top usage: 3328 of 1048576

Thread 3: status = VgTs_WaitSys syscall 202 (lwpid 13688)
==13685==    at 0x4D4C197: __futex_abstimed_wait_common64 (futex-internal.c:57)
==13685==    by 0x4D4C197: __futex_abstimed_wait_common (futex-internal.c:87)
==13685==    by 0x4D4C197: __futex_abstimed_wait_cancelable64 (futex-internal.c:139)
==13685==    by 0x4D4EAC0: __pthread_cond_wait_common (pthread_cond_wait.c:503)
==13685==    by 0x4D4EAC0: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:627)
==13685==    by 0x674489C: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x66F4B0A: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x67447CA: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x4D4FB42: start_thread (pthread_create.c:442)
==13685==    by 0x4DE0BB3: clone (clone.S:100)
client stack range: [0x123F3000 0x12BF1FFF] client SP: 0x12BF1C10
valgrind stack range: [0x10078F8000 0x10079F7FFF] top usage: 3736 of 1048576

Thread 4: status = VgTs_WaitSys syscall 202 (lwpid 13689)
==13685==    at 0x4D4C3B7: __lll_lock_wake (lowlevellock.c:65)
==13685==    by 0x4D54B8C: lll_mutex_unlock_optimized (pthread_mutex_unlock.c:43)
==13685==    by 0x4D54B8C: __pthread_mutex_unlock_usercnt (pthread_mutex_unlock.c:68)
==13685==    by 0x4D54B8C: pthread_mutex_unlock@@GLIBC_2.2.5 (pthread_mutex_unlock.c:368)
==13685==    by 0x674498C: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x66F4BB8: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x67447CA: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x4D4FB42: start_thread (pthread_create.c:442)
==13685==    by 0x4DE0BB3: clone (clone.S:100)
client stack range: [0x12BF4000 0x133F2FFF] client SP: 0x133F2D08
valgrind stack range: [0x1007BFC000 0x1007CFBFFF] top usage: 5896 of 1048576

Thread 5: status = VgTs_WaitSys syscall 202 (lwpid 13690)
==13685==    at 0x4D4C197: __futex_abstimed_wait_common64 (futex-internal.c:57)
==13685==    by 0x4D4C197: __futex_abstimed_wait_common (futex-internal.c:87)
==13685==    by 0x4D4C197: __futex_abstimed_wait_cancelable64 (futex-internal.c:139)
==13685==    by 0x4D4EAC0: __pthread_cond_wait_common (pthread_cond_wait.c:503)
==13685==    by 0x4D4EAC0: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:627)
==13685==    by 0x674489C: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x66F4B0A: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x67447CA: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x4D4FB42: start_thread (pthread_create.c:442)
==13685==    by 0x4DE0BB3: clone (clone.S:100)
client stack range: [0x133F5000 0x13BF3FFF] client SP: 0x13BF3C10
valgrind stack range: [0x1007F00000 0x1007FFFFFF] top usage: 3224 of 1048576

Thread 6: status = VgTs_WaitSys syscall 202 (lwpid 13691)
==13685==    at 0x4D4C197: __futex_abstimed_wait_common64 (futex-internal.c:57)
==13685==    by 0x4D4C197: __futex_abstimed_wait_common (futex-internal.c:87)
==13685==    by 0x4D4C197: __futex_abstimed_wait_cancelable64 (futex-internal.c:139)
==13685==    by 0x4D4EAC0: __pthread_cond_wait_common (pthread_cond_wait.c:503)
==13685==    by 0x4D4EAC0: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:627)
==13685==    by 0x674489C: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x66F4B0A: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x67447CA: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x4D4FB42: start_thread (pthread_create.c:442)
==13685==    by 0x4DE0BB3: clone (clone.S:100)
client stack range: [0x13FF6000 0x147F4FFF] client SP: 0x147F4C10
valgrind stack range: [0x100A319000 0x100A418FFF] top usage: 3224 of 1048576

Thread 7: status = VgTs_WaitSys syscall 202 (lwpid 13692)
==13685==    at 0x4D4C340: futex_wait (futex-internal.h:146)
==13685==    by 0x4D4C340: __lll_lock_wait (lowlevellock.c:49)
==13685==    by 0x4D53081: lll_mutex_lock_optimized (pthread_mutex_lock.c:48)
==13685==    by 0x4D53081: pthread_mutex_lock@@GLIBC_2.2.5 (pthread_mutex_lock.c:93)
==13685==    by 0x674496C: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x66F4AE7: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x67447CA: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==13685==    by 0x4D4FB42: start_thread (pthread_create.c:442)
==13685==    by 0x4DE0BB3: clone (clone.S:100)
client stack range: [0x159F7000 0x161F5FFF] client SP: 0x161F5D08
valgrind stack range: [0x100D3F4000 0x100D4F3FFF] top usage: 3224 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

